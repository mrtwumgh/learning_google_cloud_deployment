"""
Django settings for movie_review_project project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
import dj_database_url
from dotenv import load_dotenv
from supabase import create_client, Client


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

load_dotenv(os.path.join(BASE_DIR, '.env'))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DEBUG', 'False') == "True"

ALLOWED_HOSTS = os.environ.get("ALLOWED_HOSTS").split(",")

CSRF_TRUSTED_ORIGINS = os.environ.get("CSRF_TRUSTED_ORIGINS").split(",")

CORS_ORIGIN_ALLOW_ALL = True
CORS_REPLACE_HTTPS_REFERER = True
CORS_ALLOW_HEADERS = [ "accept", "referer", "accept-encoding", "authorization", "content-type", "dnt", "origin", "user-agent", "x-csrftoken", "x-sessionid", "x-requested-with"]
CORS_EXPOSE_HEADERS = ['Set-Cookie']
"""
CORS_ALLOWED_HOSTS = [
    'example.us',
    'www.example.us',
    'example-us.vercel.app',
    'localhost'
]
CORS_ALLOWED_ORIGINS = [
    'https://localhost',
    'https://example-us.vercel.app',
    'https://example.us', 
    'https://www.example.us', 
    'https://www.example.us:40001',
    'https://example.us:40001',
    'https://0.0.0.0:40001',
]

CORS_ALLOW_CREDENTIALS = True

CSRF_TRUSTED_ORIGINS = [
    'localhost', 
    'www.example.us', 
    'example.us'
]
"""
"""
# old testing settings
CSRF_COOKIE_SECURE = True

ALLOWED_HOSTS = [
'example.us',
'www.example.us',
# 'www.example.us:40001',
  'example-us.vercel.app'
]

CORS_ALLOWED_HOSTS = [
'example.us',
'www.example.us',
# 'www.example.us:40001',
  'example-us.vercel.app'
]
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOWED_ORIGINS = [
  'https://127.0.0.1:3000',
  'https://example-us.vercel.app',
  'https://example.us', 
  'https://www.example.us', 
  'https://www.example.us:40001',
  'https://example.us:40001'
]

CSRF_TRUSTED_ORIGINS = [
  'example.us', 
  'www.example.us', 
  'vercel.app',
  'example-us.vercel.app'
]
# SESSION_COOKIE_SAMESITE = "strict"
"""
"""
CORS_ALLOWED_HOSTS = [
  'https://127.0.0.1:3000',
  'https://example-us.vercel.app',
  'example.us', 
  'www.example.us', 
  'www.example.us:40001'
]

CSRF_TRUSTED_ORIGINS = [
  'https://127.0.0.1:3000',
  'https://example-us.vercel.app',
  'https://example.us/', 
  'http://example.us/', 
  'https://www.example.us/', 
  'http://www.example.us',
  'https://www.example.us:40001',
  'http://www.example.us:40001'
]
# CSRF_COOKIE_SAMESITE = None
CORS_ORIGIN_WHITELIST = (
  'https://127.0.0.1:3000',
  'https://example-us.vercel.app',
  'https://example.us/', 
  'http://example.us/', 
  'https://www.example.us/', 
  'http://www.example.us',
  'https://www.example.us:40001',
  'http://www.example.us:40001'
)
CSRF_ALLOWED_ORIGINS = [
  'https://127.0.0.1:3000',
  'https://example-us.vercel.app',
  'https://example.us/', 
  'http://example.us/', 
  'https://www.example.us/', 
  'http://www.example.us',
  'https://www.example.us:40001',
  'http://www.example.us:40001'
]
"""
# CORS_ALLOW_HEADERS = [ "accept", "referer", "accept-encoding", "authorization", "content-type", "dnt", "origin", "user-agent", "x-csrftoken", "x-requested-with", "csrfmiddlewaretoken"]


"""
CORS_ALLOWED_ORIGINS = [
    "https://example.us:40001",
    "https://www.example.us:40001",
    "https://localhost:40001",
    "https://127.0.0.1:40001",
    "https://example-us.vercel.app"
]
"""



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'django_filters',
    'drf_yasg',
    'reviews',
    'users',
    'comments',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'movie_review_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'movie_review_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': dj_database_url.parse(os.environ.get('DATABASE_URL'))
}

# if DEBUG:
#     DATABASES = {
#         'default': {
#             'ENGINE': 'django.db.backends.sqlite3',
#             'NAME': BASE_DIR / 'db.sqlite3',
#         }
#     }


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication'
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10
}


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/



MEDIA_ROOT = os.path.join(BASE_DIR, "media")

STATIC_URL = "static/"

STORAGES = {
    "staticfiles": {
        "BACKEND": "whitenoise.storage.CompressedManifestStaticFilesStorage",
    },
}

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static")
]

STATIC_ROOT = os.path.join(BASE_DIR, "static/staticfiles")




# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
